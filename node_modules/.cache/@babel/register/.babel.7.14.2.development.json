{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/shimys/Desktop/workspace/gulp-practice/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/shimys/Desktop/workspace/gulp-practice\",\"filename\":\"/Users/shimys/Desktop/workspace/gulp-practice/gulpfile.babel.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/shimys/Desktop/workspace/gulp-practice\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.2": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/shimys/Desktop/workspace/gulp-practice/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/shimys/Desktop/workspace/gulp-practice",
      "filename": "/Users/shimys/Desktop/workspace/gulp-practice/gulpfile.babel.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/shimys/Desktop/workspace/gulp-practice",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/shimys/Desktop/workspace/gulp-practice/gulpfile.babel.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/shimys/Desktop/workspace/gulp-practice/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/shimys/Desktop/workspace/gulp-practice/",
        "sourceFileName": "gulpfile.babel.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dev = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpPug = _interopRequireDefault(require(\"gulp-pug\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nvar _gulpWebserver = _interopRequireDefault(require(\"gulp-webserver\"));\n\nvar _gulpImage = _interopRequireDefault(require(\"gulp-image\"));\n\nvar _gulpSass = _interopRequireDefault(require(\"gulp-sass\"));\n\nvar _gulpAutoprefixer = _interopRequireDefault(require(\"gulp-autoprefixer\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/* gulp-sass가 node-sass로 sass파일을 전달 */\n_gulpSass[\"default\"].compiler = require(\"node-sass\");\nvar routes = {\n  pug: {\n    watch: \"src/**/*.pug\",\n    src: \"src/*.pug\",\n    dest: \"build\"\n  },\n  img: {\n    src: \"src/img/*\",\n    dest: \"build/img\"\n  },\n  scss: {\n    watch: \"src/scss/**/*.scss\",\n    src: \"src/scss/style.scss\",\n    dest: \"build/css\"\n  }\n};\n\nvar pug = function pug() {\n  return _gulp[\"default\"].src(routes.pug.src).pipe((0, _gulpPug[\"default\"])()).pipe(_gulp[\"default\"].dest(routes.pug.dest));\n};\n\nvar clean = function clean() {\n  return (0, _del[\"default\"])([\"build\"]);\n};\n\nvar webserver = function webserver() {\n  return _gulp[\"default\"].src(\"build\").pipe((0, _gulpWebserver[\"default\"])({\n    livereload: true,\n    open: true\n  }));\n};\n\nvar img = function img() {\n  return _gulp[\"default\"].src(routes.img.src).pipe((0, _gulpImage[\"default\"])()).pipe(_gulp[\"default\"].dest(routes.img.dest));\n};\n\nvar styles = function styles() {\n  return _gulp[\"default\"].src(routes.scss.src).pipe((0, _gulpSass[\"default\"])().on(\"error\", _gulpSass[\"default\"].logError)).pipe((0, _gulpAutoprefixer[\"default\"])({\n    browsers: [\"last 2 versions\"]\n  })).pipe(_gulp[\"default\"].dest(routes.scss.dest));\n};\n\nvar watch = function watch() {\n  _gulp[\"default\"].watch(routes.pug.watch, pug);\n\n  _gulp[\"default\"].watch(routes.img.src, img);\n\n  _gulp[\"default\"].watch(routes.scss.watch, styles);\n};\n\nvar prepare = _gulp[\"default\"].series([clean, img]);\n\nvar assets = _gulp[\"default\"].series([pug, styles]);\n\nvar postDev = _gulp[\"default\"].parallel([webserver, watch]);\n\nvar dev = _gulp[\"default\"].series([prepare, assets, postDev]);\n\nexports.dev = dev;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbInNhc3MiLCJjb21waWxlciIsInJlcXVpcmUiLCJyb3V0ZXMiLCJwdWciLCJ3YXRjaCIsInNyYyIsImRlc3QiLCJpbWciLCJzY3NzIiwiZ3VscCIsInBpcGUiLCJjbGVhbiIsIndlYnNlcnZlciIsImxpdmVyZWxvYWQiLCJvcGVuIiwic3R5bGVzIiwib24iLCJsb2dFcnJvciIsImJyb3dzZXJzIiwicHJlcGFyZSIsInNlcmllcyIsImFzc2V0cyIsInBvc3REZXYiLCJwYXJhbGxlbCIsImRldiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUE7QUFDQUEscUJBQUtDLFFBQUwsR0FBZ0JDLE9BQU8sQ0FBQyxXQUFELENBQXZCO0FBRUEsSUFBTUMsTUFBTSxHQUFHO0FBQ1hDLEVBQUFBLEdBQUcsRUFBRTtBQUNEQyxJQUFBQSxLQUFLLEVBQUUsY0FETjtBQUVEQyxJQUFBQSxHQUFHLEVBQUUsV0FGSjtBQUdEQyxJQUFBQSxJQUFJLEVBQUU7QUFITCxHQURNO0FBTVhDLEVBQUFBLEdBQUcsRUFBRTtBQUNERixJQUFBQSxHQUFHLEVBQUUsV0FESjtBQUVEQyxJQUFBQSxJQUFJLEVBQUU7QUFGTCxHQU5NO0FBVVhFLEVBQUFBLElBQUksRUFBRTtBQUNGSixJQUFBQSxLQUFLLEVBQUUsb0JBREw7QUFFRkMsSUFBQUEsR0FBRyxFQUFFLHFCQUZIO0FBR0ZDLElBQUFBLElBQUksRUFBRTtBQUhKO0FBVkssQ0FBZjs7QUFpQkEsSUFBTUgsR0FBRyxHQUFHLFNBQU5BLEdBQU07QUFBQSxTQUFNTSxpQkFBS0osR0FBTCxDQUFTSCxNQUFNLENBQUNDLEdBQVAsQ0FBV0UsR0FBcEIsRUFDR0ssSUFESCxDQUNRLDBCQURSLEVBRUdBLElBRkgsQ0FFUUQsaUJBQUtILElBQUwsQ0FBVUosTUFBTSxDQUFDQyxHQUFQLENBQVdHLElBQXJCLENBRlIsQ0FBTjtBQUFBLENBQVo7O0FBR0EsSUFBTUssS0FBSyxHQUFHLFNBQVJBLEtBQVE7QUFBQSxTQUFNLHFCQUFJLENBQUMsT0FBRCxDQUFKLENBQU47QUFBQSxDQUFkOztBQUNBLElBQU1DLFNBQVMsR0FBRyxTQUFaQSxTQUFZO0FBQUEsU0FBTUgsaUJBQ0hKLEdBREcsQ0FDQyxPQURELEVBRUhLLElBRkcsQ0FFRSwrQkFBRztBQUFDRyxJQUFBQSxVQUFVLEVBQUMsSUFBWjtBQUFrQkMsSUFBQUEsSUFBSSxFQUFFO0FBQXhCLEdBQUgsQ0FGRixDQUFOO0FBQUEsQ0FBbEI7O0FBR0EsSUFBTVAsR0FBRyxHQUFHLFNBQU5BLEdBQU07QUFBQSxTQUFNRSxpQkFDR0osR0FESCxDQUNPSCxNQUFNLENBQUNLLEdBQVAsQ0FBV0YsR0FEbEIsRUFFR0ssSUFGSCxDQUVRLDRCQUZSLEVBR0dBLElBSEgsQ0FHUUQsaUJBQUtILElBQUwsQ0FBVUosTUFBTSxDQUFDSyxHQUFQLENBQVdELElBQXJCLENBSFIsQ0FBTjtBQUFBLENBQVo7O0FBSUEsSUFBTVMsTUFBTSxHQUFHLFNBQVRBLE1BQVM7QUFBQSxTQUFNTixpQkFDQUosR0FEQSxDQUNJSCxNQUFNLENBQUNNLElBQVAsQ0FBWUgsR0FEaEIsRUFFQUssSUFGQSxDQUVLLDRCQUFPTSxFQUFQLENBQVUsT0FBVixFQUFtQmpCLHFCQUFLa0IsUUFBeEIsQ0FGTCxFQUdBUCxJQUhBLENBR0ssa0NBQU07QUFDUlEsSUFBQUEsUUFBUSxFQUFFLENBQUMsaUJBQUQ7QUFERixHQUFOLENBSEwsRUFNQVIsSUFOQSxDQU1LRCxpQkFBS0gsSUFBTCxDQUFVSixNQUFNLENBQUNNLElBQVAsQ0FBWUYsSUFBdEIsQ0FOTCxDQUFOO0FBQUEsQ0FBZjs7QUFPQSxJQUFNRixLQUFLLEdBQUcsU0FBUkEsS0FBUSxHQUFNO0FBQ2hCSyxtQkFBS0wsS0FBTCxDQUFXRixNQUFNLENBQUNDLEdBQVAsQ0FBV0MsS0FBdEIsRUFBNkJELEdBQTdCOztBQUNBTSxtQkFBS0wsS0FBTCxDQUFXRixNQUFNLENBQUNLLEdBQVAsQ0FBV0YsR0FBdEIsRUFBMkJFLEdBQTNCOztBQUNBRSxtQkFBS0wsS0FBTCxDQUFXRixNQUFNLENBQUNNLElBQVAsQ0FBWUosS0FBdkIsRUFBOEJXLE1BQTlCO0FBQ0gsQ0FKRDs7QUFNQSxJQUFNSSxPQUFPLEdBQUdWLGlCQUFLVyxNQUFMLENBQVksQ0FBQ1QsS0FBRCxFQUFRSixHQUFSLENBQVosQ0FBaEI7O0FBQ0EsSUFBTWMsTUFBTSxHQUFHWixpQkFBS1csTUFBTCxDQUFZLENBQUNqQixHQUFELEVBQU1ZLE1BQU4sQ0FBWixDQUFmOztBQUNBLElBQU1PLE9BQU8sR0FBR2IsaUJBQUtjLFFBQUwsQ0FBYyxDQUFDWCxTQUFELEVBQVlSLEtBQVosQ0FBZCxDQUFoQjs7QUFFTyxJQUFNb0IsR0FBRyxHQUFHZixpQkFBS1csTUFBTCxDQUFZLENBQUNELE9BQUQsRUFBVUUsTUFBVixFQUFrQkMsT0FBbEIsQ0FBWixDQUFaIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9zaGlteXMvRGVza3RvcC93b3Jrc3BhY2UvZ3VscC1wcmFjdGljZS8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ3VscCBmcm9tIFwiZ3VscFwiO1xuaW1wb3J0IGdwdWcgZnJvbSBcImd1bHAtcHVnXCI7XG5pbXBvcnQgZGVsIGZyb20gXCJkZWxcIjtcbmltcG9ydCB3cyBmcm9tIFwiZ3VscC13ZWJzZXJ2ZXJcIjtcbmltcG9ydCBpbWFnZSBmcm9tIFwiZ3VscC1pbWFnZVwiO1xuaW1wb3J0IHNhc3MgZnJvbSBcImd1bHAtc2Fzc1wiO1xuaW1wb3J0IGF1dG9wIGZyb20gXCJndWxwLWF1dG9wcmVmaXhlclwiO1xuXG4vKiBndWxwLXNhc3PqsIAgbm9kZS1zYXNz66GcIHNhc3PtjIzsnbzsnYQg7KCE64usICovXG5zYXNzLmNvbXBpbGVyID0gcmVxdWlyZShcIm5vZGUtc2Fzc1wiKTtcblxuY29uc3Qgcm91dGVzID0ge1xuICAgIHB1Zzoge1xuICAgICAgICB3YXRjaDogXCJzcmMvKiovKi5wdWdcIixcbiAgICAgICAgc3JjOiBcInNyYy8qLnB1Z1wiLFxuICAgICAgICBkZXN0OiBcImJ1aWxkXCJcbiAgICB9LFxuICAgIGltZzoge1xuICAgICAgICBzcmM6IFwic3JjL2ltZy8qXCIsXG4gICAgICAgIGRlc3Q6IFwiYnVpbGQvaW1nXCJcbiAgICB9LFxuICAgIHNjc3M6IHtcbiAgICAgICAgd2F0Y2g6IFwic3JjL3Njc3MvKiovKi5zY3NzXCIsXG4gICAgICAgIHNyYzogXCJzcmMvc2Nzcy9zdHlsZS5zY3NzXCIsXG4gICAgICAgIGRlc3Q6IFwiYnVpbGQvY3NzXCJcbiAgICB9XG59O1xuXG5jb25zdCBwdWcgPSAoKSA9PiBndWxwLnNyYyhyb3V0ZXMucHVnLnNyYylcbiAgICAgICAgICAgICAgICAgICAgLnBpcGUoZ3B1ZygpKVxuICAgICAgICAgICAgICAgICAgICAucGlwZShndWxwLmRlc3Qocm91dGVzLnB1Zy5kZXN0KSk7XG5jb25zdCBjbGVhbiA9ICgpID0+IGRlbChbXCJidWlsZFwiXSk7XG5jb25zdCB3ZWJzZXJ2ZXIgPSAoKSA9PiBndWxwXG4gICAgICAgICAgICAgICAgICAgIC5zcmMoXCJidWlsZFwiKVxuICAgICAgICAgICAgICAgICAgICAucGlwZSh3cyh7bGl2ZXJlbG9hZDp0cnVlLCBvcGVuOiB0cnVlfSkpO1xuY29uc3QgaW1nID0gKCkgPT4gZ3VscFxuICAgICAgICAgICAgICAgICAgICAuc3JjKHJvdXRlcy5pbWcuc3JjKVxuICAgICAgICAgICAgICAgICAgICAucGlwZShpbWFnZSgpKVxuICAgICAgICAgICAgICAgICAgICAucGlwZShndWxwLmRlc3Qocm91dGVzLmltZy5kZXN0KSk7XG5jb25zdCBzdHlsZXMgPSAoKSA9PiBndWxwXG4gICAgICAgICAgICAgICAgICAgIC5zcmMocm91dGVzLnNjc3Muc3JjKVxuICAgICAgICAgICAgICAgICAgICAucGlwZShzYXNzKCkub24oXCJlcnJvclwiLCBzYXNzLmxvZ0Vycm9yKSlcbiAgICAgICAgICAgICAgICAgICAgLnBpcGUoYXV0b3Aoe1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJvd3NlcnM6IFtcImxhc3QgMiB2ZXJzaW9uc1wiXVxuICAgICAgICAgICAgICAgICAgICB9KSlcbiAgICAgICAgICAgICAgICAgICAgLnBpcGUoZ3VscC5kZXN0KHJvdXRlcy5zY3NzLmRlc3QpKTtcbmNvbnN0IHdhdGNoID0gKCkgPT4ge1xuICAgIGd1bHAud2F0Y2gocm91dGVzLnB1Zy53YXRjaCwgcHVnKTtcbiAgICBndWxwLndhdGNoKHJvdXRlcy5pbWcuc3JjLCBpbWcpO1xuICAgIGd1bHAud2F0Y2gocm91dGVzLnNjc3Mud2F0Y2gsIHN0eWxlcyk7XG59O1xuXG5jb25zdCBwcmVwYXJlID0gZ3VscC5zZXJpZXMoW2NsZWFuLCBpbWddKTtcbmNvbnN0IGFzc2V0cyA9IGd1bHAuc2VyaWVzKFtwdWcsIHN0eWxlc10pO1xuY29uc3QgcG9zdERldiA9IGd1bHAucGFyYWxsZWwoW3dlYnNlcnZlciwgd2F0Y2hdKTtcblxuZXhwb3J0IGNvbnN0IGRldiA9IGd1bHAuc2VyaWVzKFtwcmVwYXJlLCBhc3NldHMsIHBvc3REZXZdKTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "sass",
        "compiler",
        "require",
        "routes",
        "pug",
        "watch",
        "src",
        "dest",
        "img",
        "scss",
        "gulp",
        "pipe",
        "clean",
        "webserver",
        "livereload",
        "open",
        "styles",
        "on",
        "logError",
        "browsers",
        "prepare",
        "series",
        "assets",
        "postDev",
        "parallel",
        "dev"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;AACAA,qBAAKC,QAAL,GAAgBC,OAAO,CAAC,WAAD,CAAvB;AAEA,IAAMC,MAAM,GAAG;AACXC,EAAAA,GAAG,EAAE;AACDC,IAAAA,KAAK,EAAE,cADN;AAEDC,IAAAA,GAAG,EAAE,WAFJ;AAGDC,IAAAA,IAAI,EAAE;AAHL,GADM;AAMXC,EAAAA,GAAG,EAAE;AACDF,IAAAA,GAAG,EAAE,WADJ;AAEDC,IAAAA,IAAI,EAAE;AAFL,GANM;AAUXE,EAAAA,IAAI,EAAE;AACFJ,IAAAA,KAAK,EAAE,oBADL;AAEFC,IAAAA,GAAG,EAAE,qBAFH;AAGFC,IAAAA,IAAI,EAAE;AAHJ;AAVK,CAAf;;AAiBA,IAAMH,GAAG,GAAG,SAANA,GAAM;AAAA,SAAMM,iBAAKJ,GAAL,CAASH,MAAM,CAACC,GAAP,CAAWE,GAApB,EACGK,IADH,CACQ,0BADR,EAEGA,IAFH,CAEQD,iBAAKH,IAAL,CAAUJ,MAAM,CAACC,GAAP,CAAWG,IAArB,CAFR,CAAN;AAAA,CAAZ;;AAGA,IAAMK,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAM,qBAAI,CAAC,OAAD,CAAJ,CAAN;AAAA,CAAd;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAMH,iBACHJ,GADG,CACC,OADD,EAEHK,IAFG,CAEE,+BAAG;AAACG,IAAAA,UAAU,EAAC,IAAZ;AAAkBC,IAAAA,IAAI,EAAE;AAAxB,GAAH,CAFF,CAAN;AAAA,CAAlB;;AAGA,IAAMP,GAAG,GAAG,SAANA,GAAM;AAAA,SAAME,iBACGJ,GADH,CACOH,MAAM,CAACK,GAAP,CAAWF,GADlB,EAEGK,IAFH,CAEQ,4BAFR,EAGGA,IAHH,CAGQD,iBAAKH,IAAL,CAAUJ,MAAM,CAACK,GAAP,CAAWD,IAArB,CAHR,CAAN;AAAA,CAAZ;;AAIA,IAAMS,MAAM,GAAG,SAATA,MAAS;AAAA,SAAMN,iBACAJ,GADA,CACIH,MAAM,CAACM,IAAP,CAAYH,GADhB,EAEAK,IAFA,CAEK,4BAAOM,EAAP,CAAU,OAAV,EAAmBjB,qBAAKkB,QAAxB,CAFL,EAGAP,IAHA,CAGK,kCAAM;AACRQ,IAAAA,QAAQ,EAAE,CAAC,iBAAD;AADF,GAAN,CAHL,EAMAR,IANA,CAMKD,iBAAKH,IAAL,CAAUJ,MAAM,CAACM,IAAP,CAAYF,IAAtB,CANL,CAAN;AAAA,CAAf;;AAOA,IAAMF,KAAK,GAAG,SAARA,KAAQ,GAAM;AAChBK,mBAAKL,KAAL,CAAWF,MAAM,CAACC,GAAP,CAAWC,KAAtB,EAA6BD,GAA7B;;AACAM,mBAAKL,KAAL,CAAWF,MAAM,CAACK,GAAP,CAAWF,GAAtB,EAA2BE,GAA3B;;AACAE,mBAAKL,KAAL,CAAWF,MAAM,CAACM,IAAP,CAAYJ,KAAvB,EAA8BW,MAA9B;AACH,CAJD;;AAMA,IAAMI,OAAO,GAAGV,iBAAKW,MAAL,CAAY,CAACT,KAAD,EAAQJ,GAAR,CAAZ,CAAhB;;AACA,IAAMc,MAAM,GAAGZ,iBAAKW,MAAL,CAAY,CAACjB,GAAD,EAAMY,MAAN,CAAZ,CAAf;;AACA,IAAMO,OAAO,GAAGb,iBAAKc,QAAL,CAAc,CAACX,SAAD,EAAYR,KAAZ,CAAd,CAAhB;;AAEO,IAAMoB,GAAG,GAAGf,iBAAKW,MAAL,CAAY,CAACD,OAAD,EAAUE,MAAV,EAAkBC,OAAlB,CAAZ,CAAZ",
      "sourceRoot": "/Users/shimys/Desktop/workspace/gulp-practice/",
      "sourcesContent": [
        "import gulp from \"gulp\";\nimport gpug from \"gulp-pug\";\nimport del from \"del\";\nimport ws from \"gulp-webserver\";\nimport image from \"gulp-image\";\nimport sass from \"gulp-sass\";\nimport autop from \"gulp-autoprefixer\";\n\n/* gulp-sass가 node-sass로 sass파일을 전달 */\nsass.compiler = require(\"node-sass\");\n\nconst routes = {\n    pug: {\n        watch: \"src/**/*.pug\",\n        src: \"src/*.pug\",\n        dest: \"build\"\n    },\n    img: {\n        src: \"src/img/*\",\n        dest: \"build/img\"\n    },\n    scss: {\n        watch: \"src/scss/**/*.scss\",\n        src: \"src/scss/style.scss\",\n        dest: \"build/css\"\n    }\n};\n\nconst pug = () => gulp.src(routes.pug.src)\n                    .pipe(gpug())\n                    .pipe(gulp.dest(routes.pug.dest));\nconst clean = () => del([\"build\"]);\nconst webserver = () => gulp\n                    .src(\"build\")\n                    .pipe(ws({livereload:true, open: true}));\nconst img = () => gulp\n                    .src(routes.img.src)\n                    .pipe(image())\n                    .pipe(gulp.dest(routes.img.dest));\nconst styles = () => gulp\n                    .src(routes.scss.src)\n                    .pipe(sass().on(\"error\", sass.logError))\n                    .pipe(autop({\n                        browsers: [\"last 2 versions\"]\n                    }))\n                    .pipe(gulp.dest(routes.scss.dest));\nconst watch = () => {\n    gulp.watch(routes.pug.watch, pug);\n    gulp.watch(routes.img.src, img);\n    gulp.watch(routes.scss.watch, styles);\n};\n\nconst prepare = gulp.series([clean, img]);\nconst assets = gulp.series([pug, styles]);\nconst postDev = gulp.parallel([webserver, watch]);\n\nexport const dev = gulp.series([prepare, assets, postDev]);"
      ]
    },
    "sourceType": "script",
    "mtime": 1621076778024
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/shimys/Desktop/workspace/gulp-practice/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/shimys/Desktop/workspace/gulp-practice\",\"filename\":\"/Users/shimys/Desktop/workspace/gulp-practice/gulpfile.babel.js\",\"targets\":{\"android\":\"89.0.0\",\"chrome\":\"89.0.0\",\"edge\":\"89.0.0\",\"firefox\":\"87.0.0\",\"ie\":\"10.0.0\",\"ios\":\"14.0.0\",\"opera\":\"74.0.0\",\"safari\":\"14.0.0\",\"samsung\":\"13.0.0\"},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/shimys/Desktop/workspace/gulp-practice\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.2": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/shimys/Desktop/workspace/gulp-practice/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/shimys/Desktop/workspace/gulp-practice",
      "filename": "/Users/shimys/Desktop/workspace/gulp-practice/gulpfile.babel.js",
      "targets": {
        "android": "89.0.0",
        "chrome": "89.0.0",
        "edge": "89.0.0",
        "firefox": "87.0.0",
        "ie": "10.0.0",
        "ios": "14.0.0",
        "opera": "74.0.0",
        "safari": "14.0.0",
        "samsung": "13.0.0"
      },
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/shimys/Desktop/workspace/gulp-practice",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/shimys/Desktop/workspace/gulp-practice/gulpfile.babel.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/shimys/Desktop/workspace/gulp-practice/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/shimys/Desktop/workspace/gulp-practice/",
        "sourceFileName": "gulpfile.babel.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dev = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpPug = _interopRequireDefault(require(\"gulp-pug\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nvar _gulpWebserver = _interopRequireDefault(require(\"gulp-webserver\"));\n\nvar _gulpImage = _interopRequireDefault(require(\"gulp-image\"));\n\nvar _gulpSass = _interopRequireDefault(require(\"gulp-sass\"));\n\nvar _gulpAutoprefixer = _interopRequireDefault(require(\"gulp-autoprefixer\"));\n\nvar _gulpCsso = _interopRequireDefault(require(\"gulp-csso\"));\n\nvar _gulpBro = _interopRequireDefault(require(\"gulp-bro\"));\n\nvar _babelify = _interopRequireDefault(require(\"babelify\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* gulp-sass가 node-sass로 sass파일을 전달 */\n_gulpSass.default.compiler = require(\"node-sass\");\nvar routes = {\n  pug: {\n    watch: \"src/**/*.pug\",\n    src: \"src/*.pug\",\n    dest: \"build\"\n  },\n  img: {\n    src: \"src/img/*\",\n    dest: \"build/img\"\n  },\n  scss: {\n    watch: \"src/scss/**/*.scss\",\n    src: \"src/scss/style.scss\",\n    dest: \"build/css\"\n  },\n  js: {\n    watch: \"src/js/**/*.js\",\n    src: \"src/js/main.js\",\n    dest: \"build/js\"\n  }\n};\n\nvar pug = function pug() {\n  return _gulp.default.src(routes.pug.src).pipe((0, _gulpPug.default)()).pipe(_gulp.default.dest(routes.pug.dest));\n};\n\nvar clean = function clean() {\n  return (0, _del.default)([\"build\"]);\n};\n\nvar webserver = function webserver() {\n  return _gulp.default.src(\"build\").pipe((0, _gulpWebserver.default)({\n    livereload: true,\n    open: true\n  }));\n};\n\nvar img = function img() {\n  return _gulp.default.src(routes.img.src).pipe((0, _gulpImage.default)()).pipe(_gulp.default.dest(routes.img.dest));\n};\n\nvar styles = function styles() {\n  return _gulp.default.src(routes.scss.src).pipe((0, _gulpSass.default)().on(\"error\", _gulpSass.default.logError)).pipe((0, _gulpAutoprefixer.default)()).pipe((0, _gulpCsso.default)()).pipe(_gulp.default.dest(routes.scss.dest));\n};\n\nvar js = function js() {\n  return _gulp.default.src(routes.js.src).pipe((0, _gulpBro.default)()).pipe(_gulp.default.dest(routes.js.dest));\n};\n\nvar watch = function watch() {\n  _gulp.default.watch(routes.pug.watch, pug);\n\n  _gulp.default.watch(routes.img.src, img);\n\n  _gulp.default.watch(routes.scss.watch, styles);\n\n  _gulp.default.watch(routes.js.watch, js);\n};\n\nvar prepare = _gulp.default.series([clean, img]);\n\nvar assets = _gulp.default.series([pug, styles, js]);\n\nvar postDev = _gulp.default.parallel([webserver, watch]);\n\nvar dev = _gulp.default.series([prepare, assets, postDev]);\n\nexports.dev = dev;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbInNhc3MiLCJjb21waWxlciIsInJlcXVpcmUiLCJyb3V0ZXMiLCJwdWciLCJ3YXRjaCIsInNyYyIsImRlc3QiLCJpbWciLCJzY3NzIiwianMiLCJndWxwIiwicGlwZSIsImNsZWFuIiwid2Vic2VydmVyIiwibGl2ZXJlbG9hZCIsIm9wZW4iLCJzdHlsZXMiLCJvbiIsImxvZ0Vycm9yIiwicHJlcGFyZSIsInNlcmllcyIsImFzc2V0cyIsInBvc3REZXYiLCJwYXJhbGxlbCIsImRldiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUE7QUFDQUEsa0JBQUtDLFFBQUwsR0FBZ0JDLE9BQU8sQ0FBQyxXQUFELENBQXZCO0FBRUEsSUFBTUMsTUFBTSxHQUFHO0FBQ1hDLEVBQUFBLEdBQUcsRUFBRTtBQUNEQyxJQUFBQSxLQUFLLEVBQUUsY0FETjtBQUVEQyxJQUFBQSxHQUFHLEVBQUUsV0FGSjtBQUdEQyxJQUFBQSxJQUFJLEVBQUU7QUFITCxHQURNO0FBTVhDLEVBQUFBLEdBQUcsRUFBRTtBQUNERixJQUFBQSxHQUFHLEVBQUUsV0FESjtBQUVEQyxJQUFBQSxJQUFJLEVBQUU7QUFGTCxHQU5NO0FBVVhFLEVBQUFBLElBQUksRUFBRTtBQUNGSixJQUFBQSxLQUFLLEVBQUUsb0JBREw7QUFFRkMsSUFBQUEsR0FBRyxFQUFFLHFCQUZIO0FBR0ZDLElBQUFBLElBQUksRUFBRTtBQUhKLEdBVks7QUFlWEcsRUFBQUEsRUFBRSxFQUFFO0FBQ0FMLElBQUFBLEtBQUssRUFBRSxnQkFEUDtBQUVBQyxJQUFBQSxHQUFHLEVBQUUsZ0JBRkw7QUFHQUMsSUFBQUEsSUFBSSxFQUFFO0FBSE47QUFmTyxDQUFmOztBQXNCQSxJQUFNSCxHQUFHLEdBQUcsU0FBTkEsR0FBTTtBQUFBLFNBQU1PLGNBQUtMLEdBQUwsQ0FBU0gsTUFBTSxDQUFDQyxHQUFQLENBQVdFLEdBQXBCLEVBQ0dNLElBREgsQ0FDUSx1QkFEUixFQUVHQSxJQUZILENBRVFELGNBQUtKLElBQUwsQ0FBVUosTUFBTSxDQUFDQyxHQUFQLENBQVdHLElBQXJCLENBRlIsQ0FBTjtBQUFBLENBQVo7O0FBR0EsSUFBTU0sS0FBSyxHQUFHLFNBQVJBLEtBQVE7QUFBQSxTQUFNLGtCQUFJLENBQUMsT0FBRCxDQUFKLENBQU47QUFBQSxDQUFkOztBQUNBLElBQU1DLFNBQVMsR0FBRyxTQUFaQSxTQUFZO0FBQUEsU0FBTUgsY0FDSEwsR0FERyxDQUNDLE9BREQsRUFFSE0sSUFGRyxDQUVFLDRCQUFHO0FBQUNHLElBQUFBLFVBQVUsRUFBQyxJQUFaO0FBQWtCQyxJQUFBQSxJQUFJLEVBQUU7QUFBeEIsR0FBSCxDQUZGLENBQU47QUFBQSxDQUFsQjs7QUFHQSxJQUFNUixHQUFHLEdBQUcsU0FBTkEsR0FBTTtBQUFBLFNBQU1HLGNBQ0dMLEdBREgsQ0FDT0gsTUFBTSxDQUFDSyxHQUFQLENBQVdGLEdBRGxCLEVBRUdNLElBRkgsQ0FFUSx5QkFGUixFQUdHQSxJQUhILENBR1FELGNBQUtKLElBQUwsQ0FBVUosTUFBTSxDQUFDSyxHQUFQLENBQVdELElBQXJCLENBSFIsQ0FBTjtBQUFBLENBQVo7O0FBSUEsSUFBTVUsTUFBTSxHQUFHLFNBQVRBLE1BQVM7QUFBQSxTQUFNTixjQUNBTCxHQURBLENBQ0lILE1BQU0sQ0FBQ00sSUFBUCxDQUFZSCxHQURoQixFQUVBTSxJQUZBLENBRUsseUJBQU9NLEVBQVAsQ0FBVSxPQUFWLEVBQW1CbEIsa0JBQUttQixRQUF4QixDQUZMLEVBR0FQLElBSEEsQ0FHSyxnQ0FITCxFQUlBQSxJQUpBLENBSUssd0JBSkwsRUFLQUEsSUFMQSxDQUtLRCxjQUFLSixJQUFMLENBQVVKLE1BQU0sQ0FBQ00sSUFBUCxDQUFZRixJQUF0QixDQUxMLENBQU47QUFBQSxDQUFmOztBQU1BLElBQU1HLEVBQUUsR0FBRyxTQUFMQSxFQUFLO0FBQUEsU0FBTUMsY0FDSUwsR0FESixDQUNRSCxNQUFNLENBQUNPLEVBQVAsQ0FBVUosR0FEbEIsRUFFSU0sSUFGSixDQUVTLHVCQUZULEVBR0lBLElBSEosQ0FHU0QsY0FBS0osSUFBTCxDQUFVSixNQUFNLENBQUNPLEVBQVAsQ0FBVUgsSUFBcEIsQ0FIVCxDQUFOO0FBQUEsQ0FBWDs7QUFLQSxJQUFNRixLQUFLLEdBQUcsU0FBUkEsS0FBUSxHQUFNO0FBQ2hCTSxnQkFBS04sS0FBTCxDQUFXRixNQUFNLENBQUNDLEdBQVAsQ0FBV0MsS0FBdEIsRUFBNkJELEdBQTdCOztBQUNBTyxnQkFBS04sS0FBTCxDQUFXRixNQUFNLENBQUNLLEdBQVAsQ0FBV0YsR0FBdEIsRUFBMkJFLEdBQTNCOztBQUNBRyxnQkFBS04sS0FBTCxDQUFXRixNQUFNLENBQUNNLElBQVAsQ0FBWUosS0FBdkIsRUFBOEJZLE1BQTlCOztBQUNBTixnQkFBS04sS0FBTCxDQUFXRixNQUFNLENBQUNPLEVBQVAsQ0FBVUwsS0FBckIsRUFBNEJLLEVBQTVCO0FBQ0gsQ0FMRDs7QUFPQSxJQUFNVSxPQUFPLEdBQUdULGNBQUtVLE1BQUwsQ0FBWSxDQUFDUixLQUFELEVBQVFMLEdBQVIsQ0FBWixDQUFoQjs7QUFDQSxJQUFNYyxNQUFNLEdBQUdYLGNBQUtVLE1BQUwsQ0FBWSxDQUFDakIsR0FBRCxFQUFNYSxNQUFOLEVBQWNQLEVBQWQsQ0FBWixDQUFmOztBQUNBLElBQU1hLE9BQU8sR0FBR1osY0FBS2EsUUFBTCxDQUFjLENBQUNWLFNBQUQsRUFBWVQsS0FBWixDQUFkLENBQWhCOztBQUVPLElBQU1vQixHQUFHLEdBQUdkLGNBQUtVLE1BQUwsQ0FBWSxDQUFDRCxPQUFELEVBQVVFLE1BQVYsRUFBa0JDLE9BQWxCLENBQVosQ0FBWiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvc2hpbXlzL0Rlc2t0b3Avd29ya3NwYWNlL2d1bHAtcHJhY3RpY2UvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGd1bHAgZnJvbSBcImd1bHBcIjtcbmltcG9ydCBncHVnIGZyb20gXCJndWxwLXB1Z1wiO1xuaW1wb3J0IGRlbCBmcm9tIFwiZGVsXCI7XG5pbXBvcnQgd3MgZnJvbSBcImd1bHAtd2Vic2VydmVyXCI7XG5pbXBvcnQgaW1hZ2UgZnJvbSBcImd1bHAtaW1hZ2VcIjtcbmltcG9ydCBzYXNzIGZyb20gXCJndWxwLXNhc3NcIjtcbmltcG9ydCBhdXRvcHJlZml4ZXIgZnJvbSBcImd1bHAtYXV0b3ByZWZpeGVyXCI7XG5pbXBvcnQgbWluaUNTUyBmcm9tIFwiZ3VscC1jc3NvXCI7XG5pbXBvcnQgYnJvIGZyb20gXCJndWxwLWJyb1wiO1xuaW1wb3J0IGJhYmVsaWZ5IGZyb20gXCJiYWJlbGlmeVwiO1xuXG4vKiBndWxwLXNhc3PqsIAgbm9kZS1zYXNz66GcIHNhc3PtjIzsnbzsnYQg7KCE64usICovXG5zYXNzLmNvbXBpbGVyID0gcmVxdWlyZShcIm5vZGUtc2Fzc1wiKTtcblxuY29uc3Qgcm91dGVzID0ge1xuICAgIHB1Zzoge1xuICAgICAgICB3YXRjaDogXCJzcmMvKiovKi5wdWdcIixcbiAgICAgICAgc3JjOiBcInNyYy8qLnB1Z1wiLFxuICAgICAgICBkZXN0OiBcImJ1aWxkXCJcbiAgICB9LFxuICAgIGltZzoge1xuICAgICAgICBzcmM6IFwic3JjL2ltZy8qXCIsXG4gICAgICAgIGRlc3Q6IFwiYnVpbGQvaW1nXCJcbiAgICB9LFxuICAgIHNjc3M6IHtcbiAgICAgICAgd2F0Y2g6IFwic3JjL3Njc3MvKiovKi5zY3NzXCIsXG4gICAgICAgIHNyYzogXCJzcmMvc2Nzcy9zdHlsZS5zY3NzXCIsXG4gICAgICAgIGRlc3Q6IFwiYnVpbGQvY3NzXCJcbiAgICB9LFxuICAgIGpzOiB7XG4gICAgICAgIHdhdGNoOiBcInNyYy9qcy8qKi8qLmpzXCIsXG4gICAgICAgIHNyYzogXCJzcmMvanMvbWFpbi5qc1wiLFxuICAgICAgICBkZXN0OiBcImJ1aWxkL2pzXCJcbiAgICB9XG59O1xuXG5jb25zdCBwdWcgPSAoKSA9PiBndWxwLnNyYyhyb3V0ZXMucHVnLnNyYylcbiAgICAgICAgICAgICAgICAgICAgLnBpcGUoZ3B1ZygpKVxuICAgICAgICAgICAgICAgICAgICAucGlwZShndWxwLmRlc3Qocm91dGVzLnB1Zy5kZXN0KSk7XG5jb25zdCBjbGVhbiA9ICgpID0+IGRlbChbXCJidWlsZFwiXSk7XG5jb25zdCB3ZWJzZXJ2ZXIgPSAoKSA9PiBndWxwXG4gICAgICAgICAgICAgICAgICAgIC5zcmMoXCJidWlsZFwiKVxuICAgICAgICAgICAgICAgICAgICAucGlwZSh3cyh7bGl2ZXJlbG9hZDp0cnVlLCBvcGVuOiB0cnVlfSkpO1xuY29uc3QgaW1nID0gKCkgPT4gZ3VscFxuICAgICAgICAgICAgICAgICAgICAuc3JjKHJvdXRlcy5pbWcuc3JjKVxuICAgICAgICAgICAgICAgICAgICAucGlwZShpbWFnZSgpKVxuICAgICAgICAgICAgICAgICAgICAucGlwZShndWxwLmRlc3Qocm91dGVzLmltZy5kZXN0KSk7XG5jb25zdCBzdHlsZXMgPSAoKSA9PiBndWxwXG4gICAgICAgICAgICAgICAgICAgIC5zcmMocm91dGVzLnNjc3Muc3JjKVxuICAgICAgICAgICAgICAgICAgICAucGlwZShzYXNzKCkub24oXCJlcnJvclwiLCBzYXNzLmxvZ0Vycm9yKSlcbiAgICAgICAgICAgICAgICAgICAgLnBpcGUoYXV0b3ByZWZpeGVyKCkpXG4gICAgICAgICAgICAgICAgICAgIC5waXBlKG1pbmlDU1MoKSlcbiAgICAgICAgICAgICAgICAgICAgLnBpcGUoZ3VscC5kZXN0KHJvdXRlcy5zY3NzLmRlc3QpKTtcbmNvbnN0IGpzID0gKCkgPT4gZ3VscFxuICAgICAgICAgICAgICAgICAgICAuc3JjKHJvdXRlcy5qcy5zcmMpXG4gICAgICAgICAgICAgICAgICAgIC5waXBlKGJybygpKVxuICAgICAgICAgICAgICAgICAgICAucGlwZShndWxwLmRlc3Qocm91dGVzLmpzLmRlc3QpKTtcblxuY29uc3Qgd2F0Y2ggPSAoKSA9PiB7XG4gICAgZ3VscC53YXRjaChyb3V0ZXMucHVnLndhdGNoLCBwdWcpO1xuICAgIGd1bHAud2F0Y2gocm91dGVzLmltZy5zcmMsIGltZyk7XG4gICAgZ3VscC53YXRjaChyb3V0ZXMuc2Nzcy53YXRjaCwgc3R5bGVzKTtcbiAgICBndWxwLndhdGNoKHJvdXRlcy5qcy53YXRjaCwganMpO1xufTtcblxuY29uc3QgcHJlcGFyZSA9IGd1bHAuc2VyaWVzKFtjbGVhbiwgaW1nXSk7XG5jb25zdCBhc3NldHMgPSBndWxwLnNlcmllcyhbcHVnLCBzdHlsZXMsIGpzXSk7XG5jb25zdCBwb3N0RGV2ID0gZ3VscC5wYXJhbGxlbChbd2Vic2VydmVyLCB3YXRjaF0pO1xuXG5leHBvcnQgY29uc3QgZGV2ID0gZ3VscC5zZXJpZXMoW3ByZXBhcmUsIGFzc2V0cywgcG9zdERldl0pOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "sass",
        "compiler",
        "require",
        "routes",
        "pug",
        "watch",
        "src",
        "dest",
        "img",
        "scss",
        "js",
        "gulp",
        "pipe",
        "clean",
        "webserver",
        "livereload",
        "open",
        "styles",
        "on",
        "logError",
        "prepare",
        "series",
        "assets",
        "postDev",
        "parallel",
        "dev"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;AACAA,kBAAKC,QAAL,GAAgBC,OAAO,CAAC,WAAD,CAAvB;AAEA,IAAMC,MAAM,GAAG;AACXC,EAAAA,GAAG,EAAE;AACDC,IAAAA,KAAK,EAAE,cADN;AAEDC,IAAAA,GAAG,EAAE,WAFJ;AAGDC,IAAAA,IAAI,EAAE;AAHL,GADM;AAMXC,EAAAA,GAAG,EAAE;AACDF,IAAAA,GAAG,EAAE,WADJ;AAEDC,IAAAA,IAAI,EAAE;AAFL,GANM;AAUXE,EAAAA,IAAI,EAAE;AACFJ,IAAAA,KAAK,EAAE,oBADL;AAEFC,IAAAA,GAAG,EAAE,qBAFH;AAGFC,IAAAA,IAAI,EAAE;AAHJ,GAVK;AAeXG,EAAAA,EAAE,EAAE;AACAL,IAAAA,KAAK,EAAE,gBADP;AAEAC,IAAAA,GAAG,EAAE,gBAFL;AAGAC,IAAAA,IAAI,EAAE;AAHN;AAfO,CAAf;;AAsBA,IAAMH,GAAG,GAAG,SAANA,GAAM;AAAA,SAAMO,cAAKL,GAAL,CAASH,MAAM,CAACC,GAAP,CAAWE,GAApB,EACGM,IADH,CACQ,uBADR,EAEGA,IAFH,CAEQD,cAAKJ,IAAL,CAAUJ,MAAM,CAACC,GAAP,CAAWG,IAArB,CAFR,CAAN;AAAA,CAAZ;;AAGA,IAAMM,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAM,kBAAI,CAAC,OAAD,CAAJ,CAAN;AAAA,CAAd;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAMH,cACHL,GADG,CACC,OADD,EAEHM,IAFG,CAEE,4BAAG;AAACG,IAAAA,UAAU,EAAC,IAAZ;AAAkBC,IAAAA,IAAI,EAAE;AAAxB,GAAH,CAFF,CAAN;AAAA,CAAlB;;AAGA,IAAMR,GAAG,GAAG,SAANA,GAAM;AAAA,SAAMG,cACGL,GADH,CACOH,MAAM,CAACK,GAAP,CAAWF,GADlB,EAEGM,IAFH,CAEQ,yBAFR,EAGGA,IAHH,CAGQD,cAAKJ,IAAL,CAAUJ,MAAM,CAACK,GAAP,CAAWD,IAArB,CAHR,CAAN;AAAA,CAAZ;;AAIA,IAAMU,MAAM,GAAG,SAATA,MAAS;AAAA,SAAMN,cACAL,GADA,CACIH,MAAM,CAACM,IAAP,CAAYH,GADhB,EAEAM,IAFA,CAEK,yBAAOM,EAAP,CAAU,OAAV,EAAmBlB,kBAAKmB,QAAxB,CAFL,EAGAP,IAHA,CAGK,gCAHL,EAIAA,IAJA,CAIK,wBAJL,EAKAA,IALA,CAKKD,cAAKJ,IAAL,CAAUJ,MAAM,CAACM,IAAP,CAAYF,IAAtB,CALL,CAAN;AAAA,CAAf;;AAMA,IAAMG,EAAE,GAAG,SAALA,EAAK;AAAA,SAAMC,cACIL,GADJ,CACQH,MAAM,CAACO,EAAP,CAAUJ,GADlB,EAEIM,IAFJ,CAES,uBAFT,EAGIA,IAHJ,CAGSD,cAAKJ,IAAL,CAAUJ,MAAM,CAACO,EAAP,CAAUH,IAApB,CAHT,CAAN;AAAA,CAAX;;AAKA,IAAMF,KAAK,GAAG,SAARA,KAAQ,GAAM;AAChBM,gBAAKN,KAAL,CAAWF,MAAM,CAACC,GAAP,CAAWC,KAAtB,EAA6BD,GAA7B;;AACAO,gBAAKN,KAAL,CAAWF,MAAM,CAACK,GAAP,CAAWF,GAAtB,EAA2BE,GAA3B;;AACAG,gBAAKN,KAAL,CAAWF,MAAM,CAACM,IAAP,CAAYJ,KAAvB,EAA8BY,MAA9B;;AACAN,gBAAKN,KAAL,CAAWF,MAAM,CAACO,EAAP,CAAUL,KAArB,EAA4BK,EAA5B;AACH,CALD;;AAOA,IAAMU,OAAO,GAAGT,cAAKU,MAAL,CAAY,CAACR,KAAD,EAAQL,GAAR,CAAZ,CAAhB;;AACA,IAAMc,MAAM,GAAGX,cAAKU,MAAL,CAAY,CAACjB,GAAD,EAAMa,MAAN,EAAcP,EAAd,CAAZ,CAAf;;AACA,IAAMa,OAAO,GAAGZ,cAAKa,QAAL,CAAc,CAACV,SAAD,EAAYT,KAAZ,CAAd,CAAhB;;AAEO,IAAMoB,GAAG,GAAGd,cAAKU,MAAL,CAAY,CAACD,OAAD,EAAUE,MAAV,EAAkBC,OAAlB,CAAZ,CAAZ",
      "sourceRoot": "/Users/shimys/Desktop/workspace/gulp-practice/",
      "sourcesContent": [
        "import gulp from \"gulp\";\nimport gpug from \"gulp-pug\";\nimport del from \"del\";\nimport ws from \"gulp-webserver\";\nimport image from \"gulp-image\";\nimport sass from \"gulp-sass\";\nimport autoprefixer from \"gulp-autoprefixer\";\nimport miniCSS from \"gulp-csso\";\nimport bro from \"gulp-bro\";\nimport babelify from \"babelify\";\n\n/* gulp-sass가 node-sass로 sass파일을 전달 */\nsass.compiler = require(\"node-sass\");\n\nconst routes = {\n    pug: {\n        watch: \"src/**/*.pug\",\n        src: \"src/*.pug\",\n        dest: \"build\"\n    },\n    img: {\n        src: \"src/img/*\",\n        dest: \"build/img\"\n    },\n    scss: {\n        watch: \"src/scss/**/*.scss\",\n        src: \"src/scss/style.scss\",\n        dest: \"build/css\"\n    },\n    js: {\n        watch: \"src/js/**/*.js\",\n        src: \"src/js/main.js\",\n        dest: \"build/js\"\n    }\n};\n\nconst pug = () => gulp.src(routes.pug.src)\n                    .pipe(gpug())\n                    .pipe(gulp.dest(routes.pug.dest));\nconst clean = () => del([\"build\"]);\nconst webserver = () => gulp\n                    .src(\"build\")\n                    .pipe(ws({livereload:true, open: true}));\nconst img = () => gulp\n                    .src(routes.img.src)\n                    .pipe(image())\n                    .pipe(gulp.dest(routes.img.dest));\nconst styles = () => gulp\n                    .src(routes.scss.src)\n                    .pipe(sass().on(\"error\", sass.logError))\n                    .pipe(autoprefixer())\n                    .pipe(miniCSS())\n                    .pipe(gulp.dest(routes.scss.dest));\nconst js = () => gulp\n                    .src(routes.js.src)\n                    .pipe(bro())\n                    .pipe(gulp.dest(routes.js.dest));\n\nconst watch = () => {\n    gulp.watch(routes.pug.watch, pug);\n    gulp.watch(routes.img.src, img);\n    gulp.watch(routes.scss.watch, styles);\n    gulp.watch(routes.js.watch, js);\n};\n\nconst prepare = gulp.series([clean, img]);\nconst assets = gulp.series([pug, styles, js]);\nconst postDev = gulp.parallel([webserver, watch]);\n\nexport const dev = gulp.series([prepare, assets, postDev]);"
      ]
    },
    "sourceType": "script",
    "mtime": 1621080926928
  }
}